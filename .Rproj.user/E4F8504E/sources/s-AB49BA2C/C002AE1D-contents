
peso = c(54,100,78,65,80,75,90)
estatura = c(150,150,170,170,160,175,160)
sobrepeso = c(1,0,1,1,0,1,0)

data = data.frame(sobrepeso, peso, estatura)

data$sobrepeso = as.factor(data$sobrepeso)

test = data_frame("sobrepeso" = c(1,0), "peso" = c(90,90), "estatura" = c(180,110))
#test = data_frame("sobrepeso" = 0, "peso" = 90, "estatura" = 110)
test$sobrepeso = as.factor(test$sobrepeso)


library(class)

classes = data$sobrepeso

pred_knn = knn(train = data[-1], test =test[-1], cl = classes, k = 1) # Respuesta 0

library(dplyr)
data_test = data
data_test$distance = 0

column_names = names(test[-1])

predictions = c()

for(ob in 1:nrow(test[-1])){
    
    observacion = test[-1][ob,]
    
    for(col in column_names){
        data_test = data_test %>%
            mutate(distance = distance + abs(data_test[col] - as.numeric(observacion[1, col])) )
    }
    
    # for(col in column_names){
    #     data_test = data_test %>%
    #         mutate(distance = distance + (data_test[col] - as.numeric(observacion[1, col]))^2 )
    # }
    # data_test = data_test %>%
    #     mutate(distance = sqrt(distance))
    
    chose_data = data_test %>%
        top_n(distance, n = -1) %>%
        group_by(sobrepeso) %>%
        summarise(n = n()) %>%
        arrange(desc(n))
    
    prediction = as.numeric(chose_data[1,1]) - 1
    
    predictions = c(predictions, prediction)
}

predictions = as.factor(predictions)

mean(pred_knn == test$sobrepeso)
mean(predictions == test$sobrepeso)